{"name":"Quant","tagline":"Data analysis for ESO","body":"This addon contains a collection of tools for getting data from Elder Scrolls Online.\r\nIt's a combination of in-game addon modules, external scripts, and some HTML for viewing the data\r\nafterwords.\r\n\r\n# Warnings\r\nThis is not an easy setup. I've made it as easy as possible, but there are a lot of moving parts.\r\nFurthermore, you still have to do a lot of the work afterwords.\r\n\r\nThis addon can use a lot of lua memory to export data. Consider disabling other addons when running.\r\nAs well, you'll want to delete/move the saved variables for this when you're done.\r\n\r\nAlso, your game may appear to freeze while doing some of the commands. This is normal.\r\nA lot of the commands involve a lot of processing, and it's not really a priority to make the\r\ngame run smoothly during them.\r\n\r\nHealth data is not recorded yet. This will make some of the skill formulas wildly inaccurate.\r\nPay close attention to the R squared value.\r\n\r\n# Installation\r\n1) Install the addon in-game\r\n  a) Install Wykkyd's Outfitter (required for some modules)\r\n  b) Put into addon folder for game\r\n\r\n2) Install R (http://www.r-project.org/)\r\n  a) Install Rserve. Within the R cli, type the following command:\r\n    `install.packages(\"Rserve\")`\r\nNOTE: Stand-alone Rserve can be used if desired for most functionality\r\n\r\n3) Install Scilua / LuaJIT\r\n  a) Follow the directions on http://www.scilua.org/get.html\r\n  b) Make sure to get the main Xsys library and the Rclient library.\r\n\r\n# Usage\r\n## Addon in-game\r\n\r\nThere are several different modules in-game. They're accessesd by slash commands and self-documenting.\r\nType `/quant` in the chat box to see a list of commands and a brief description.\r\n\r\n### Major modules:\r\n* Champion system -- (`cs` and `cs-desc`) dumping champion system per-point data and descriptions\r\n* Stats dump -- Exports character current character stats\r\n* Skill dump -- Exports description and details about skills\r\n* Skill curve -- Iterates through gear to record skill tooltip numbers at different stats*\r\n* Sets dump -- Exports a dump of all set info\r\n* Power register -- crude dumping of stamina/magicka changes to chatbox\r\n\r\n## External Lua\r\n\r\nSeveral commands write out to the game's `SavedVariables`. A few of the scripts are designed to extract\r\nthe data from the `SavedVariables` file and process it.\r\n\r\nFirst you need to setup the `cfg.lua` in the root directory. If you don't, the scripts won't find your\r\nsaved variables.\r\n\r\nTo access, run the `runScripts.lua` file in the base directory. Files will be output in that same directory.\r\nThere's a brief summary, buts see the individual scripts for more details.\r\n\r\n## HTML\r\nI've started working on some HTML for displaying. After exporting the data to JSON, move the JSON into the\r\nsame folder as the HTML. You can then open the HTML in Firefox. \r\n\r\nNote: Unless you actually host it on a site (or some complicated workarounds), Chrome will not load local\r\nfiles.\r\n\r\n-----------------------------------------------------\r\n# Cleanup\r\nDelete `Quant.lua` from your SavedVariables directory when you are done with it\r\n\r\n# Extension\r\nIn-game\r\n* See `modules/Template.lua` for a documented example of the framework.\r\n* After adding a module, include its path in `Quant.txt` at the end.\r\n\r\nExternal\r\n* There are several convenience functions in `scripts/inc` to help out\r\n* Consider adding to the `runScript.lua` to make it easier to access\r\n\r\n# Changelog\r\n* 0.4 - Add sets, initialize Git\r\n* 0.3 - Begin limited release to Mostly Harmless and Wagonborn\r\n* 0.2 - Personal use (Skill iteration)\r\n* 0.1 - Personal use (Champ System)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}